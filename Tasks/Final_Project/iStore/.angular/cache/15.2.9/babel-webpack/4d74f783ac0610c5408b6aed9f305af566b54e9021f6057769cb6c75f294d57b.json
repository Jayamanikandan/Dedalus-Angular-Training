{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet ProductFormComponent = class ProductFormComponent {\n  constructor(_productCatService, _productImgService, _productColorsListService, _productStorageListService, _productFeaturesListService, dialogRef, fb) {\n    this._productCatService = _productCatService;\n    this._productImgService = _productImgService;\n    this._productColorsListService = _productColorsListService;\n    this._productStorageListService = _productStorageListService;\n    this._productFeaturesListService = _productFeaturesListService;\n    this.dialogRef = dialogRef;\n    this.form = {};\n    this.dropdownSettings = {};\n    this.errors = [];\n    this.name = \"\";\n    this.productcategoryid = 0;\n    this.mrp = \"\";\n    this.price = \"\";\n    this.reviewscount = \"\";\n    this.averagerating = \"\";\n    this.images = [];\n    this.colours = [];\n    this.storage = [];\n    this.features = [];\n    this.tags = [];\n    this.description = \"\";\n    this.message = \"\";\n    this.availableqty = \"\";\n    this.productCatArray = [];\n    this.productImgListArray = [];\n    this.productStorageListArray = [];\n    this.productColorsListArray = [];\n    this.productFeaturesListArray = [];\n    this.selectedItemsImage = [];\n    this.selectedItemsColors = [];\n    this.selectedItemsStorage = [];\n    this.selectedItemsFeatures = [];\n  }\n  save() {\n    this.dialogRef.close();\n  }\n  close() {\n    this.dialogRef.close();\n  }\n  ngOnInit() {\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'Unselect All',\n      itemsShowLimit: 3,\n      allowSearchFilter: true\n    };\n    this._productCatService.getProductCategory().subscribe({\n      next: data => this.productCatArray = data,\n      error: error => this.productCatArray = []\n    });\n    this._productImgService.getProductImagesList().subscribe(data => this.productImgListArray = data);\n    this._productColorsListService.getProductColorsList().subscribe(data => this.productColorsListArray = data);\n    this._productStorageListService.getProductStorageList().subscribe(data => this.productStorageListArray = data);\n    this._productFeaturesListService.getProductFeaturesList().subscribe(data => this.productFeaturesListArray = data);\n  }\n  onImageItemSelect(item) {\n    console.log(item);\n  }\n  onImageSelectAll(items) {\n    console.log(items);\n  }\n  onColorsItemSelect(item) {\n    console.log(item);\n  }\n  onColorsSelectAll(items) {\n    console.log(items);\n  }\n  onStorageItemSelect(item) {\n    console.log(item);\n  }\n  onStorageSelectAll(items) {\n    console.log(items);\n  }\n  onFeatureItemSelect(item) {\n    console.log(item);\n  }\n  onFeatureSelectAll(items) {\n    console.log(items);\n  }\n  postProduct() {\n    this.errors = [];\n    if (this.name == \"\") this.errors.push(\"Name should not be empty\");\n    let oProduct = {\n      id: Math.round(Math.random() * 100000),\n      name: this.name,\n      productcategoryid: this.productcategoryid,\n      mrp: this.mrp,\n      price: this.price,\n      reviewscount: this.reviewscount,\n      averagerating: this.averagerating,\n      images: this.images,\n      colours: this.colours,\n      storage: this.storage,\n      features: this.features,\n      tags: this.tags,\n      description: this.description,\n      availableqty: this.availableqty\n    };\n    if (this.errors.length == 0) {\n      // this._productService.postProduct(oProduct).subscribe({\n      //   next:()=>{\n      //     alert(\"Product is successfully stored\");\n      //     location.reload();\n      //   },\n      //   error:()=>{\n      //     alert(\"Problem in saving Product!!\");\n      //   }\n      // });\n    }\n  }\n};\nProductFormComponent = __decorate([Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css']\n})], ProductFormComponent);\nexport { ProductFormComponent };","map":{"version":3,"mappings":"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","names":["Component","ProductFormComponent","constructor","_productCatService","_productImgService","_productColorsListService","_productStorageListService","_productFeaturesListService","dialogRef","fb","save","close","ngOnInit","dropdownSettings","singleSelection","idField","textField","selectAllText","unSelectAllText","itemsShowLimit","allowSearchFilter","getProductCategory","subscribe","next","data","productCatArray","error","getProductImagesList","productImgListArray","getProductColorsList","productColorsListArray","getProductStorageList","productStorageListArray","getProductFeaturesList","productFeaturesListArray","onImageItemSelect","item","console","log","onImageSelectAll","items","onColorsItemSelect","onColorsSelectAll","onStorageItemSelect","onStorageSelectAll","onFeatureItemSelect","onFeatureSelectAll","postProduct","errors","name","push","oProduct","id","Math","round","random","productcategoryid","mrp","price","reviewscount","averagerating","images","colours","storage","features","tags","description","availableqty","length","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\D_Drive\\Training\\Angular\\Source\\Angular_Course\\Tasks\\istore\\src\\app\\wzforms\\product-form\\product-form.component.ts"],"sourcesContent":["import { Component,OnInit  } from '@angular/core';\nimport { product, productCategory } from 'src/app/model/model';\nimport { IDropdownSettings } from 'ng-multiselect-dropdown';\nimport { ProductCategoryService } from 'src/app/services/product-category.service';\nimport { ProductImageslistService } from 'src/app/services/product-imageslist.service';\nimport { ProductColorslistService } from 'src/app/services/product-colorslist.service';\nimport { ProductStorageListService } from 'src/app/services/product-storage-list.service';\nimport { ProductFeatureslistService } from 'src/app/services/product-featureslist.service';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport { FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'app-product-form',\n  templateUrl: './product-form.component.html',\n  styleUrls: ['./product-form.component.css'],\n})\nexport class ProductFormComponent implements OnInit {\n  form: FormGroup={};\n\n  dropdownSettings:IDropdownSettings={};\n\n  errors:string[]=[];\n\n  name:string=\"\";\n  productcategoryid:number=0;\n  mrp:any=\"\";\n  price:any=\"\";\n  reviewscount:any=\"\";\n  averagerating:any=\"\";\n  images:any[]=[];\n  colours:any[]=[];\n  storage:any[]=[];\n  features:any[]=[];\n  tags:string[]=[];\n  description:string=\"\";\n  message:string=\"\";\n  availableqty:any=\"\";\n\n  public productCatArray:productCategory[] =[];\n  public productImgListArray =[];\n  public productStorageListArray =[];\n  public productColorsListArray =[];\n  public productFeaturesListArray =[];\n\n  public selectedItemsImage = [];\n  public selectedItemsColors = [];\n  public selectedItemsStorage = [];\n  public selectedItemsFeatures = [];\n  \n\n\n  constructor(private _productCatService:ProductCategoryService,\n    private _productImgService:ProductImageslistService,private _productColorsListService:ProductColorslistService,\n    private _productStorageListService:ProductStorageListService,private _productFeaturesListService:ProductFeatureslistService,\n    private dialogRef: MatDialogRef<ProductFormComponent>,fb:\n    ){\n  }\n\n  save() {\n    this.dialogRef.close();\n}\n\n  close() {\n      this.dialogRef.close();\n  }\n  \n  ngOnInit(){\n\n    this.dropdownSettings = {\n      singleSelection: false,\n      idField: 'id',\n      textField: 'name',\n      selectAllText: 'Select All',\n      unSelectAllText: 'Unselect All',\n      itemsShowLimit: 3,\n      allowSearchFilter:true\n   }\n   \n\n    this._productCatService.getProductCategory()\n    .subscribe(\n      \n      {\n        next:(data:productCategory[]) => this.productCatArray= data,\n        error:(error:any) => this.productCatArray=[]\n      }\n      )\n\n    this._productImgService.getProductImagesList()\n    .subscribe(data => this.productImgListArray=data)\n\n    this._productColorsListService.getProductColorsList()\n    .subscribe(data => this.productColorsListArray=data)\n\n    this._productStorageListService.getProductStorageList()\n    .subscribe(data => this.productStorageListArray=data)\n\n    this._productFeaturesListService.getProductFeaturesList()\n    .subscribe(data => this.productFeaturesListArray=data)\n  }\n\n  onImageItemSelect(item: any) {\n    console.log(item);\n  }\n  onImageSelectAll(items: any) {\n    console.log(items);\n  }\n\n  onColorsItemSelect(item: any) {\n    console.log(item);\n  }\n  onColorsSelectAll(items: any) {\n    console.log(items);\n  }\n\n  onStorageItemSelect(item: any) {\n    console.log(item);\n  }\n  onStorageSelectAll(items: any) {\n    console.log(items);\n  }\n\n  onFeatureItemSelect(item: any) {\n    console.log(item);\n  }\n  onFeatureSelectAll(items: any) {\n    console.log(items);\n  }\n\n  postProduct():void{\n\n    this.errors=[];\n\n    if(this.name==\"\")\n      this.errors.push(\"Name should not be empty\");\n\n    let oProduct={\n      id:Math.round(Math.random()*100000),\n      name:this.name,\n      productcategoryid:this.productcategoryid,\n      mrp:this.mrp,\n      price:this.price,\n      reviewscount:this.reviewscount,\n      averagerating:this.averagerating,\n      images:this.images,\n      colours:this.colours,\n      storage:this.storage,\n      features:this.features,\n      tags:this.tags,\n      description:this.description,\n      availableqty:this.availableqty\n\n    };\n\n    if(this.errors.length==0)\n    {\n\n    // this._productService.postProduct(oProduct).subscribe({\n    //   next:()=>{\n    //     alert(\"Product is successfully stored\");\n    //     location.reload();\n    //   },\n    //   error:()=>{\n    //     alert(\"Problem in saving Product!!\");\n    //   }\n    // });\n  }\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}